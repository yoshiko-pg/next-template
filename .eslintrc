{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "jsx": true,
    "project": "./tsconfig.eslint.json",
    "tsconfigRootDir": ".",
  },
  "env": {
    "browser": true,
  },
  "plugins": [
    "@typescript-eslint",
    "react-hooks",
    "prettier",
  ],
  "extends": [
    "airbnb",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "prettier/@typescript-eslint",
  ],
  "rules": {
    "no-alert": "error",
    "no-console": "error",
    "import/prefer-default-export": "off",
    "import/no-default-export": "error",
    "import/extensions": "off",
    "import/no-unresolved": "off",
    "import/no-relative-parent-imports": "error",
    /**
    * @description rules of eslint official
    */
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.stories.tsx"
        ],
        "optionalDependencies": false,
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true,
      }
    ], // https://github.com/facebook/create-react-app/issues/8107
    "no-unused-expressions": "off", // duplidate @typescript-eslint/no-unused-expressions
    "no-use-before-define": "off", // duplidate @typescript-eslint/no-use-before-define
    "no-param-reassign": [
      "error",
      {
        "props": false,
      }
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    /**
    * @description rules of @typescript-eslint
    */
    "@typescript-eslint/explicit-function-return-type": "off", // annoying to force return type
    "@typescript-eslint/no-unused-vars": "error",
    /**
    * @description rules of eslint-plugin-react
    */
    "react/jsx-indent": "off",
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": false,
        "assignment": false
      }
    ],
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [
          ".jsx",
          ".tsx",
        ]
      }
    ], // also want to use with ".tsx"
    "react/prop-types": "off", // Is this incompatible with TS props type?
    "react/require-default-props": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-curly-newline": "off", // prettierと競合する
    "react/state-in-constructor": [
      "error",
      "never"
    ],
    /**
    * jsx-a11y
    */
    "jsx-a11y/no-autofocus": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/control-has-associated-label": "off",
    "jsx-a11y/anchor-is-valid": "off",
    "jsx-a11y/media-has-caption": "off",
    /**
    * @description rules of eslint-plugin-react-hooks
    */
    "react-hooks/rules-of-hooks": "error",
    /**
    * @description rules of eslint-plugin-prettier
    */
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "semi": false,
      }
    ]
  }
}